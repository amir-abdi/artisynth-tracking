/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class vrpn_AnalogRemote */

#ifndef _Included_vrpn_AnalogRemote
#define _Included_vrpn_AnalogRemote
#ifdef __cplusplus
extern "C" {
#endif
#undef vrpn_AnalogRemote_vrpn_TEXT_NORMAL
#define vrpn_AnalogRemote_vrpn_TEXT_NORMAL 0L
#undef vrpn_AnalogRemote_vrpn_TEXT_WARNING
#define vrpn_AnalogRemote_vrpn_TEXT_WARNING 1L
#undef vrpn_AnalogRemote_vrpn_TEXT_ERROR
#define vrpn_AnalogRemote_vrpn_TEXT_ERROR 2L
#undef vrpn_AnalogRemote_MAX_CHANNELS
#define vrpn_AnalogRemote_MAX_CHANNELS 128L
/*
 * Class:     vrpn_AnalogRemote
 * Method:    getNumActiveChannels
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_vrpn_AnalogRemote_getNumActiveChannels
  (JNIEnv *, jobject);

/*
 * Class:     vrpn_AnalogRemote
 * Method:    init
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_vrpn_AnalogRemote_init
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring, jstring);

/*
 * Class:     vrpn_AnalogRemote
 * Method:    shutdownAnalog
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_vrpn_AnalogRemote_shutdownAnalog
  (JNIEnv *, jobject);

/*
 * Class:     vrpn_AnalogRemote
 * Method:    mainloop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_vrpn_AnalogRemote_mainloop
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
